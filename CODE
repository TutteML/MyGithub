# ["latitude","longitude","datetime","value"])
import folium
import pandas as pd
map1= pd.read_csv('YQ.csv', index_col=0)
df=map1.filter(["latitude","longitude","datetime","value"])

map_osm = folium.Map([36.05,103.83],tiles='Stamen Toner')
file_path = r"YQ.html"
map_osm.save(file_path)
tupxy = [tuple(x) for x in map1[["longitude", "latitude"]].values]
for coord in tupxy:
    folium.CircleMarker([coord[1], coord[0]],
                        radius=5,
                        color='#3186cc',
                        fill_color='#3186cc',
                        ).add_to(map_osm)
map_osm.save(file_path)
from folium.plugins import HeatMap
data = map1[['latitude', 'longitude', 'value']].values.tolist()
hmap = folium.Map(location=[36.05,103.83],
                  control_scale=True, zoom_start=4.2,tiles='Stamen Toner')
hmap.add_child(HeatMap(data, radius=13, gradient={.1: '#00BFFF', .7: '#1E90FF', .9:'blue',1:'#00008B'}))
file_path = r"YQ.html"
hmap.save(file_path)


from folium.plugins import HeatMapWithTime

import folium.plugins as plugins

data_move  = []
for day in df.datetime.sort_values().unique():
    data_move.append(df.loc[df.datetime == day][['datetime','latitude', 'longitude', 'value']].groupby(['latitude', 'longitude']).sum().reset_index().values.tolist())

m = folium.Map(location=[36.05,103.83], zoom_start=4.2)



hm = plugins.HeatMapWithTime(data_move, auto_play=False,radius=13, gradient={0.007: 'blue', 0.015: 'lime', 0.022: 'orange', 0.038: 'red'},min_opacity=0.3, max_opacity=0.8, use_local_extrema=True)

hm.add_to(m)

hm.save(file_path)

import seaborn as sns
import matplotlib.pyplot as plt
plt.figure(figsize=(30,10))
sns.set_palette("pastel")
ax = sns.barplot(x='datetime',y='value',data=df,)
for ind,label in enumerate(ax.get_xticklabels()):
    if ind % 1 == 0:  # every 10th label is kept
        label.set_visible(True)
    else:
        label.set_visible(False)
ax.set_xticklabels(ax.get_xticklabels(), rotation=40, ha="right")
ax.tick_params(axis='x',labelsize=12)
plt.xlabel("Date:2020/1/23-2020/3/18",fontsize=24)
plt.ylabel('Relative concentration',fontsize=24)
plt.title("Statistics of confirmed COVID - 19 patients in China",fontsize=30)
plt.tight_layout()

file_path_plt = r"YQ.png"
plt.savefig(file_path_plt)

